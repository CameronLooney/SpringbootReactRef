{"ast":null,"code":"var _jsxFileName = \"/Users/cameronlooney/Documents/students/frontend/student-app/src/components/StudentList.js\";\nimport React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport { blue, green, orange, purple, red } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentList = () => {\n  const getRandomColor = () => {\n    const colors = [blue[500], green[500], orange[500], purple[500], red[500]];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      padding: '20px',\n      width: 600,\n      margin: '20px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), students.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: students.map(student => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '300px',\n          margin: '10px',\n          padding: '10px',\n          borderRadius: '10px',\n          backgroundColor: getRandomColor(),\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'white',\n            color: getRandomColor(),\n            mb: '10px'\n          },\n          children: student.name.charAt(0).toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          mb: 1,\n          children: student.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: student.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      align: \"center\",\n      children: \"No students found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useEffect","useState","Box","Paper","Typography","Avatar","blue","green","orange","purple","red","jsxDEV","_jsxDEV","StudentList","getRandomColor","colors","Math","floor","random","length","elevation","sx","padding","width","margin","children","variant","component","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","students","display","flexDirection","alignItems","map","student","borderRadius","backgroundColor","color","bgcolor","mb","name","charAt","toUpperCase","email","id","_c","$RefreshReg$"],"sources":["/Users/cameronlooney/Documents/students/frontend/student-app/src/components/StudentList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport { blue, green, orange, purple, red } from '@mui/material/colors';\n\nconst StudentList = () => {\n\n\n  \n  const getRandomColor = () => {\n    const colors = [blue[500], green[500], orange[500], purple[500], red[500]];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  return (\n    <Paper elevation={3} sx={{ padding: '20px', width: 600, margin: '20px auto' }}>\n      <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\n        Student List\n      </Typography>\n      {students.length > 0 ? (\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          {students.map((student) => (\n            <Box\n              key={student.id}\n              sx={{\n                width: '300px',\n                margin: '10px',\n                padding: '10px',\n                borderRadius: '10px',\n                backgroundColor: getRandomColor(),\n                color: 'white',\n              }}\n            >\n              <Avatar sx={{ bgcolor: 'white', color: getRandomColor(), mb: '10px' }}>\n                {student.name.charAt(0).toUpperCase()}\n              </Avatar>\n              <Typography variant=\"h5\" component=\"h2\" mb={1}>\n                {student.name}\n              </Typography>\n              <Typography variant=\"body1\">{student.email}</Typography>\n            </Box>\n          ))}\n        </Box>\n      ) : (\n        <Typography variant=\"body1\" align=\"center\">\n          No students found.\n        </Typography>\n      )}\n    </Paper>\n  );\n};\n\nexport default StudentList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}